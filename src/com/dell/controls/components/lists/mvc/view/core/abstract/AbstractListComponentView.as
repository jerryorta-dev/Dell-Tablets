package com.dell.controls.components.lists.mvc.view.core.abstract {import com.dell.controls.components.core.abstract.AbstractButton;import com.dell.events.UIEvent;import flash.errors.IllegalOperationError;	import flash.events.Event;	import flash.display.Sprite;import flash.events.MouseEvent;// ABSTRACT Class (should be subclassed and not instantiated)	public class AbstractListComponentView extends Sprite {				protected var model:Object;		protected var controller:Object;				public function AbstractListComponentView( aModel:Object, aController:Object = null) {			this.model = aModel;			this.controller = aController;		}				public function add(c:AbstractButton):void {			throw new IllegalOperationError("add operation not supported");		}				public function remove(c:AbstractButton):void {			throw new IllegalOperationError("remove operation not supported");		}				public function getChild(n:int):AbstractButton {			throw new IllegalOperationError("getChild operation not supported");			return null;		}        // ABSTRACT Method (must be overridden in a subclass)        public function setOnState( event:UIEvent = null ):void {        }        // ABSTRACT Method (must be overridden in a subclass)        public function setOverState( event:UIEvent = null ):void {        }        // ABSTRACT Method (must be overridden in a subclass)        public function setOffState( event:UIEvent = null ):void {        }	}}