package com.dell.controls.components.templateMVCFactory.mvc.view.core.abstract {import com.dell.controls.components.templateMVCFactory.mvc.control.ITemplateController;import com.dell.controls.components.templateMVCFactory.mvc.model.ITemplateModel;import com.dell.errors.AbstractMethodError;import com.dell.events.UIEvent;import flash.display.DisplayObject;import flash.errors.IllegalOperationError;import flash.events.Event;import flash.display.Sprite;// ABSTRACT Class (should be subclassed and not instantiated)public class AbstractTemplateComponentView extends Sprite {    protected var model:ITemplateModel;    protected var controller:ITemplateController;    public function AbstractTemplateComponentView(aModel:ITemplateModel, aController:ITemplateController = null, target:DisplayObject = null) {        this.model = aModel;        this.controller = aController;    }    public function add(c:AbstractTemplateComponentView):void {        throw new AbstractMethodError();    }    public function remove(c:AbstractTemplateComponentView):void {        throw new AbstractMethodError();    }    public function getChild(n:int):AbstractTemplateComponentView {        throw new AbstractMethodError();        return null;    }    // ABSTRACT Method (must be overridden in a subclass)    public function update(event:UIEvent = null):void {        throw new AbstractMethodError();    }}}