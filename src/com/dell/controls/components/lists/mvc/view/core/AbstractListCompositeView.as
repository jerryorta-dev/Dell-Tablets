package com.dell.controls.components.lists.mvc.view.core {import com.dell.controls.components.core.abstract.AbstractButton;import com.dell.controls.components.lists.mvc.view.core.abstract.AbstractListComponentView;import com.dell.events.UIEvent;public class AbstractListCompositeView extends AbstractListComponentView {    protected var aChildren:Array;    public function AbstractListCompositeView(aModel:Object, aController:Object) {        super(aModel, aController);        this.aChildren = new Array();    }    override public function add(c:AbstractButton):void {        aChildren.push(c);    }    override public function setOnState( event:UIEvent = null ):void {        for each (var c:AbstractButton in aChildren) {            c.setOnState(event);        }    }    override public function setOverState( event:UIEvent = null ):void {        for each (var c:AbstractButton in aChildren) {            c.setOverState(event);        }    }    override public function setOffState( event:UIEvent = null ):void {        for each (var c:AbstractButton in aChildren) {            c.setOffState(event);        }    }}}