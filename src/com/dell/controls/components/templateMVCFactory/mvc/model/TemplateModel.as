package com.dell.controls.components.templateMVCFactory.mvc.model {import com.dell.events.UIEvent;import flash.events.*;public class TemplateModel extends EventDispatcher implements ITemplateModel {    private var _data:Object;    private var _state:Object;    private var _displayObject:IEventDispatcher;    public function TemplateModel( target:IEventDispatcher = null ) {        _data = {};        this._displayObject = target;    }    protected function changeModelState(  ):void {        //USE DATA TO CREATE STATE        _state = _data; //Do some crazy algorithm here        this.update();    }    protected function update():void {        dispatchEvent(new UIEvent(UIEvent.UPDATE_VIEW, _state.data)); // dispatch event        dispatchEvent(new UIEvent(UIEvent.CHANGE, _state.data)); // dispatch event    }    public function get data():Object {        return _data;    }    public function set data( value:Object ):void {        _data = value;        this.changeModelState();    }    public function get state():Object {        return _state;    }}}